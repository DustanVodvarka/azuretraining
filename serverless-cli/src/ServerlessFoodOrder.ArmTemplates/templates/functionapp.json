{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "functionAppName": {
      "type": "string",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    "hostingPlanName": {
      "type": "string",
      "metadata": {
        "description": "The name of the hosting plan for the function app."
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the storage account used by the function app"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "msdeployPackageUrl": {
      "type": "string",
      "metadata": {
        "description": "URL to MS deploy package created with the pre-compiled functions"
      }
    },
    "cosmosDbKey": {
      "type": "string",
      "metadata": {
        "description": "The primary key used to connect to CosmosDB."
      }
    },
    "cosmosDbEndpoint": {
      "type": "string",
      "metadata": {
        "description": "The endpoint for the CosmosDB instance."
      }
    }
  },
  "variables": {
    "hostingPlanName": "[parameters('functionAppName')]",
    "storageAccountid":
      "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-04-01",
      "type": "Microsoft.Web/serverfarms",
      "name": "[parameters('hostingPlanName')]",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[parameters('hostingPlanName')]",
        "computeMode": "Dynamic",
        "sku": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      ],
      "properties": {
        "name": "[parameters('functionAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      },
      "resources": [
        {
          "name": "MSDeploy",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
          ],
          "tags": {
            "displayName": "SampleFunctionAppPackage"
          },
          "properties": {
            "packageUri": "[parameters('msdeployPackageUrl')]",
            "dbType": "None",
            "connectionString": ""
          }
        },
        {
          "apiVersion": "2016-03-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
            "[concat('Microsoft.Web/sites/', parameters('functionAppName'), '/Extensions/MSDeploy')]"
          ],
          "properties": {
            "AzureWebJobsStorage":
              "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2015-05-01-preview').key1,';')]",
            "AzureWebJobsDashboard":
              "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2015-05-01-preview').key1,';')]",
            "FUNCTIONS_EXTENSION_VERSION": "latest",
            "command": "deploy.cmd",
            "CosmosDBEndpoint": "[parameters('CosmosDbEndpoint')]",
            "CosmosDBKey": "[parameters('CosmosDbKey')]"
          }
        }
      ]
    }
  ],
  "outputs": {
  }
}